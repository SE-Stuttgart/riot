[main]
#password matcher
#passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
#passwordMatcher.passwordService = $passwordService
passwordMatcher = org.apache.shiro.authc.credential.SimpleCredentialsMatcher

#datasource
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.resourceName = jdbc/riot
dataSource.requiredType = javax.sql.DataSource
dataSource.resourceRef = true

#realm for user + password authentication
usernamePasswordRealm = de.uni_stuttgart.riot.usermanagement.security.UsernamePasswordRealm
usernamePasswordRealm.authenticationQuery = SELECT hashedPassword FROM users WHERE username = ?
usernamePasswordRealm.credentialsMatcher = $passwordMatcher
usernamePasswordRealm.dataSource = $dataSource

#realm for access token authentication and authorization
tokenRealm = de.uni_stuttgart.riot.usermanagement.security.AccessTokenRealm
tokenRealm.authenticationQuery = SELECT users.username, users.hashedPassword FROM users INNER JOIN tokens ON users.ID = tokens.userID WHERE tokens.tokenvalue = ? and tokens.valid = true and tokens.expirationTime > now() and tokens.issueTime <= now()
tokenRealm.rolesQuery = SELECT roles.rolename FROM roles INNER JOIN tokens_roles ON tokens_roles.roleID = roles.ID INNER JOIN tokens ON tokens.ID = tokens_roles.tokenID WHERE tokens.tokenvalue = ? AND tokens.expirationTime > now() AND tokens.issueTime <= now()
tokenRealm.permissionsUserQuery = SELECT permissions.permissionValue FROM users INNER JOIN tokens ON users.id = tokens.userID INNER JOIN users_permissions ON users.id = users_permissions.userID INNER JOIN permissions ON users_permissions.permissionID = permissions.id WHERE tokens.tokenValue = ?
tokenRealm.permissionsRoleQuery = SELECT permissions.permissionValue FROM permissions INNER JOIN roles_permissions ON roles_permissions.permissionID = permissions.ID INNER JOIN roles ON roles.ID = roles_permissions.roleID WHERE roles.rolename = ?
tokenRealm.dataSource = $dataSource

securityManager.realms = $tokenRealm, $usernamePasswordRealm

[urls]
/api/v1/** = ssl[8181], noSessionCreation
/connect = ssl[8181], noSessionCreation