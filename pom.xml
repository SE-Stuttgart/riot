<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.uni-stuttgart.riot</groupId>
	<artifactId>riot</artifactId>
	<name>riot</name>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<slf4j.version>1.7.7</slf4j.version>
		<jersey.version>2.14</jersey.version>
		<jackson.version>2.8.11.3</jackson.version>
		<riot.root>${basedir}</riot.root>
		<mysql.host>localhost</mysql.host>
		<mysql.port>3306</mysql.port>
		<mysql.user></mysql.user>
		<mysql.password></mysql.password>
	</properties>

	<modules>
		<module>maven-plugin</module>
		<module>commons</module>
		<module>server-commons</module>
		<module>usermanagement</module>
		<module>webapp</module>
		<module>server</module>
		<module>clientlibrary</module>
		<module>android</module>
		<module>simulation-client</module>
		<module>integration-tests</module>
	</modules>

	<dependencies>

		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.10.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>


			<!-- Server -->
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>7.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-server</artifactId>
				<version>${jersey.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Logging -->
			<!-- Hint: Use slf4j-api if you want to use loggers in your code -->
			<!-- Use slf4j-log4j12 in an executable maven module, possibly with the 
				Maven scope set to test -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-android</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<!-- Database -->
			<dependency>
				<groupId>org.sql2o</groupId>
				<artifactId>sql2o</artifactId>
				<version>1.5.3</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.34</version>
			</dependency>

			<!-- Jackson for Non-Server -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- Testing -->
			<dependency>
				<groupId>org.glassfish.jersey.test-framework.providers</groupId>
				<artifactId>jersey-test-framework-provider-grizzly2</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.jersey.media</groupId>
				<artifactId>jersey-media-json-jackson</artifactId>
				<version>${jersey.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>1.4.182</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.9</version>
				</plugin>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.13,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.14</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>6.3</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<configuration>
							<configLocation>${riot.root}/commons/src/main/resources/checkstyle/conventions.xml</configLocation>
							<suppressionsLocation>${riot.root}/commons/src/main/resources/checkstyle/suppressions.xml</suppressionsLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>samedir=${riot.root}/commons/src/main/resources/checkstyle</propertyExpansion>
							<failOnViolation>true</failOnViolation>
							<violationSeverity>warning</violationSeverity>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>mysql</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.5</version>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.34</version>
							</dependency>
						</dependencies>
						<configuration>
							<driver>com.mysql.jdbc.Driver</driver>
							<url>jdbc:mysql://${mysql.host}:${mysql.port}/riot</url>
							<settingsKey>riotMySQL</settingsKey>
							<username>${mysql.user}</username>
							<password>${mysql.password}</password>
						</configuration>
						<executions>
							<execution>
								<id>create-schema</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${basedir}</basedir>
										<includes>
											<include>src/*/resources/schema/*.sql</include>
										</includes>
									</fileset>
								</configuration>
							</execution>
							<execution>
								<id>create-data</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<orderFile>ascending</orderFile>
									<fileset>
										<basedir>${basedir}</basedir>
										<includes>
											<include>src/*/resources/data/*.sql</include>
										</includes>
									</fileset>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>coverageCollect</id>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura</artifactId>
					<version>2.1.1</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.6.1</version>
						<configuration>
							<filesets>
								<fileset>
									<directory>${basedir}</directory>
									<includes>
										<include>cobertura.ser</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>build-classpath</goal>
								</goals>
								<configuration>
									<outputProperty>auxClasspath</outputProperty>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<inherited>true</inherited>
								<configuration>
									<target>
										<property environment="env" />
										<path id="cobertura.classpath">
											<fileset dir="${env.COBERTURA_HOME}">
												<include name="cobertura*.jar" />
												<include name="lib/**/*.jar" />
											</fileset>
										</path>
										<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
										<cobertura-instrument>
											<fileset dir="./target/classes">
												<include name="**/*.class" />
											</fileset>
											<auxClasspath path="${auxClasspath}" />
										</cobertura-instrument>
									</target>
								</configuration>
							</execution>
						</executions>
						<inherited>false</inherited>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverageReport</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<property environment="env" />
										<path id="cobertura.classpath">
											<fileset dir="${env.COBERTURA_HOME}">
												<include name="cobertura*.jar" />
												<include name="lib/**/*.jar" />
											</fileset>
										</path>
										<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
										<cobertura-merge datafile="./target/sum.ser">
											<fileset dir=".">
												<include name="**/cobertura.ser" />
											</fileset>
										</cobertura-merge>
										<cobertura-report datafile="./target/sum.ser"
											format="html" destdir="./target/coverage">
											<dirset dir=".">
												<include name="**/src/main/java" />
											</dirset>
										</cobertura-report>
									</target>
								</configuration>
							</execution>
						</executions>
						<inherited>false</inherited>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
