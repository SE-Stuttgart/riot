<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.1">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>460</x>
      <y>130</y>
      <w>180</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>/Rule/
--
+getDescription() : String
+initialize()
+destroy()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>240</y>
      <w>180</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>IFTTRule
--
-event : Event
-actions : ActionSequence
+executeActions()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>370</y>
      <w>180</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>ActionSequence
--
-actions : List&lt;Action&gt;
+execute()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>240</y>
      <w>170</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>WakeUpHouseRule
--
Custom implementation</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>200</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>200</y>
      <w>30</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>190</x>
      <y>470</y>
      <w>700</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>lt=.
Rule implementation with fluent API
--
ScheduledEventList shiftStarts = my(Person::employers).upcomingShifts().map(Shift::getStartEvent);
ScheduledEvent nextShift = shiftStarts.first();
ScheduledEvent wakeUpEvent = nextShift.before(Duration.ofHours(2));

wakeUpEvent.register((event) -&gt; {
    // Personal things
    my(Person::things).firstOfType(AlarmClock.class).ring();
    my(Person::devices).forEach(Device::turnOn);

    // Household things only if person is at home
    House houseILiveIn = my(Person::getHome);
    if (houseILiveIn != null &amp;&amp; my(Person::location).matches(houseILiveIn))  {
        houseILiveIn.getChildren().firstOfType(CoffeeMachine.class).turnOn();
    }
});</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
