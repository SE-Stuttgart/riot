nav_home=Home
nav_features=Features
nav_scenario=Example Scenario
nav_documentation=Documentation
nav_sign_in=Sign In

description=A easily extensible Internet of Things Framework to build, simulate, study and manage an IoT environment

description_server=The RIOT Server connects and manages all the things. The Server ist written in Java and all the data is stored in a Database.

description_interface=RIOT contains an Android app that allows to receive notifications and manage connected things. Additionally you can access your account and the administration via a web interface.

description_things=RIOT offers a REST interface to connect things with the server. Additionally offers RIOT Java classes to easily build simulations of things.

about_riot=About the RIOT project

development=Development
development_text=RIOT was created as part of the development project Internet of Things of the MSc Softwaretechnik winter semester 2014/15 at the University of Stuttgart.

overview=Overview

vision=Vision
vision_text=The product enables a number of realistic Internet of Things scenarios which can be studied and extended easily. We want to be able to investigate how new scenarios can be added to the Internet of Things (IoT). We will have an IoT environment which can work with simulated and actual devices focusing on the communication between smartphones and different devices directly and over the cloud. For example, we will simulate a car computer unit and house electronic devices. Devices communicate and control each other in a secure and safe way. A mobile application and a web site are main controllers.

mission=Mission
mission_text=For the software engineering research community, in particular the Software Engineering group at the University of Stuttgart, the IoT project will develop and deploy an IoT platform. It will be made available as open source. The platform should be of high-quality and easily extendible. It should include at least a mobile application, a cloud service with Web interface and interfaces to a car and house electronics (simulator).

features_server=Der Kern von RIOT ist eine in Java geschriebene Serveranwendung die auf einem Java Application Server (GlassFish) läuft. Der RIOT Server verwaltet die User mit ihren Berechtigungen und stellt die Verbindung der verschiedenen Dinge des IoT her. Die benötigten Daten werden dabei in einer Datenbank abgelegt. Zum Austausch von Informationen mit dem Server dient eine umfangreiche REST Schnittstelle. Außerdem besteht die Möglichkeit sich auf bestimmte Events zu registrieren. Ein umfangreiches Regelsystem das vom Server bereitgestellt und ausgewertet wird ist dabei zentraler Bestandteil für das Zusammenspiel verschiede Dinge des IoT.
features_web=Für den Zugriff auf den eigenen Account und die Administration steht ein Web Interface zu Verfügung. Dieses erlaubt es Nutzern auf ihre Kalender zuzugreifen, Notifications zu empfangen, die eigenen Things zu verwalten und mit anderen Nutzern zu teilen sowie Regeln zu erstellen. Administratoren können außerdem darüber den Server Konfigurieren sowie die Benutzer, Regeln und Berechtigungen verwalten.
features_android=Für den mobilen Zugriff auf das IoT Environment enthält RIOT eine Android App. Dieser erlaubt den Empfang von Notifications und die Verwaltung aller Things über das Smartphone.
features_things=Zur Anbindung realer Things stellt der Server eine REST-Schnittstelle zu Verfügung. Diese erlaubt die einfache Entwicklung und Anbindung beliebiger spezifischer Clients und realer Dinge. Außerdem existiert eine umfangreiche in Java geschriebene Client Library die die Anbindung an den RIOT Server mit Java noch leichter macht. 
features_simulation=Mit RIOT ist eine einfache Simulation von Things für das IoT möglich. RIOT enthält dafür ein in Java geschriebenes generisches Simulation Framework bestehend aus verschieden Java Klassen das Erstellung von neuen Clients zur Simulation beliebiger Dinge für das IoT erleichtert.